# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

variables:
# Azure Resource Manager connection created during pipeline creation
- name: pythonVersion
  value: '3.7'
- name: azureServiceConnectionId
  value: '97428859-41c8-44fd-a47d-aca80b42156d'

pool: ubuntu-local
#strategy:
#  matrix:
#    Python27:
#      python.version: '2.7'
#    Python35:
#      python.version: '3.5'
#    Python36:
#      python.version: '3.6'
#    Python37:
#      python.version: '3.7'

# steps:
# #- task: UsePythonVersion@0
# #  inputs:
# #    versionSpec: '$(pythonVersion)'
# #  displayName: 'Use Python $(pythonVersion)'

# - script: |
#     python -m pip install --upgrade pip
#     pip install -r requirements.txt
#   displayName: 'Install dependencies'

# - script: |
#     pip install pytest pytest-azurepipelines
#     pytest
#   displayName: 'pytest'

- job: BuildJob
  displayName: 'Build'

    steps:
    - script: |
       python -m venv antenv
       source antenv/bin/activate
       python -m pip install --upgrade pip
       pip install setup
       pip install --target="./.python_packages/lib/site-packages" -r ./requirements.txt
     workingDirectory: $(projectRoot)
     displayName: "Install requirements"

    - task: ArchiveFiles@2
     displayName: 'Archive files'
     inputs:
       rootFolderOrFile: '$(projectRoot)'
       includeRootFolder: false
       archiveType: zip
       archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
       replaceExistingArchive: true

   - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
     displayName: 'Upload package'
     artifact: drop 
